@startuml
class ArchitectureRawData {
    + ArchitectureRawData()
    + scalePosX : float
    + scaleX : float
    + scalePosZ : float
    + scaleZ : float
    + rotPosX : float
    + rotPosZ : float
    + cameraSettings : CameraSettings
    + racks : List<RackDto>
    + modelsRack : List<RackModelData>
    + others : List<OtherDto>
}
class CameraSettings {
    + posX : float
    + posY : float
    + posZ : float
    + rotation : float
}
class OtherDto {
    + otherID : int
    + name : string
    + model : string
    + graphics : string
    + posX : float
    + posY : float
    + posZ : float
    + rotation : float
}
class RackDto {
    + RackDto()
    + rackID : int
    + name : string
    + model : string
    + modelB : string
    + graphicsM : string
    + graphicsBM : string
    + posX : float
    + posY : float
    + posZ : float
    + rotation : float
    + rackSlots : List<RackSlotDto>
}
class RackSlotDto {
    + slotNum : int
    + name : string
    + slotID : string
    + size : int
    + type : string
    + model : string
    + posY : int
}
class RackModelData {
    + model : string
    + espacioInicioServers1u : float
    + espacioInicioCanvas1u : float
    + espacio1uY : float
    + size : int
    + espacioRackX : float
    + espacioRackZ : float
}
class DataApiSchema {
    + DataApiSchema()
    + apiSchemaList : List<ApiSchema>
}
class ApiSchema {
    + ApiSchema(app:string, key:KeyModel)
    + application : string
    + keyModel : KeyModel
}
class DataApiContainer {
    + DataApiContainer()
    + appDataList : List<List<InfoApi>>
    + keyDataList : List<KeyData>
}
class KeyData {
    + KeyData(value:string, model:KeyModel)
    + keyValue : string
    + keyModel : KeyModel
}
class KeyModel {
    + id : string
    + key : string
    + topLimit : float
}
class InfoApi {
    + InfoApi(key_:string, name:string, description:string, lastValue:string)
    + key_ : string
    + name : string
    + description : string
    + lastValue : string
}
class HostsZabbixData {
    + HostsZabbixData()
    + listHosts : List<HostZabbixData>
}
class HostZabbixData {
    + hostID : string
    + hostname : string
    + hostIP : string
    + host : string
    + descriptionHost : string
}
class VMData {
    + hostID : string
    + hostname : string
    + isVmActive : bool
}
class WarningLastData {
    + WarningLastData(w:string, p:int)
    + warningDescription : string
    + priority : int
}
class PanelSemaforoData {
    + PanelSemaforoData()
    + id : string
    + screenBackgroundColor : string
    + panelBackgroundColor : string
    + listSemaforos : List<SemaforoData>
    + schema : DataApiSchema
}
class SemaforoData {
    + SemaforoData(id:int)
    + id : int
    + name : string
    + application : string
    + key : string
    + imageName : string
    + isVMButton : bool
}
class RackBasicData {
    + RackBasicData(t:Transform, n:string)
    + transform : Transform
    + rackName : string
}
@enduml
