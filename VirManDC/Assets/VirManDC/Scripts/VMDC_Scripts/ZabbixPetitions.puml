@startuml
class ZabbixPetitions {
    + GetApiData(dataApiSchema:DataApiSchema, hostID:string, callback:Action<DataApiContainer>) : IEnumerator
    - GetApplicationData(nameApplication:string, hostID:string, callback:Action<List<InfoApi>>) : IEnumerator
    - SetResponseToInfoApi(dataList:List<ResponseItem>) : List<InfoApi>
    - GetKeyData(keyModel:KeyModel, dataList:List<InfoApi>) : KeyData
    + WarningsPetition(hostID:string, callback:Action<List<WarningLastData>>) : IEnumerator
    - DefineWarningDataFromResponse(dataList:List<WarningData>) : List<WarningLastData>
    + AllWarningsPetition(hostID:string, callback:Action<List<WarningLastData>>) : IEnumerator
    + getHostsData(callback:Action<HostsZabbixData>) : IEnumerator
    - DefineHostsDataFromResponse(hosts:ResponseIdHosts) : HostsZabbixData
    - CheckIfIsZabbixServerIP(ip:string) : string
    + getHostGroupID(hostname:string, callback:Action<string>) : IEnumerator
    + getVMfromHostGroupID(hostgroupId:string, key:string, callback:Action<List<VMData>>) : IEnumerator
    - DefineVMFromResponse(hosts:ResponseIdHosts, key:string, callback:Action<List<VMData>>) : IEnumerator
    - GetVmCheckData(key:string, hostID:string, callback:Action<bool>) : IEnumerator
    + MakeLogInPetition(user:string, password:string, callback:Action<string>, showLog:bool) : IEnumerator
    + MakePetition(zbxRequest:Request, callback:Action<string>, showLog:bool) : IEnumerator
    - ManageErrorFromWebRequest(www:UnityWebRequest) : string
}
MonoBehaviour <|-- ZabbixPetitions
@enduml
