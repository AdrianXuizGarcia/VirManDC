@startuml
class ArchitectureObjectsManager {
    + {static} Instance : ArchitectureObjectsManager
    + {static}  <<event>> OnRackInstantiationEnd : Action<RackBasicData> 
    + {static}  <<event>> OnRackPicked : Action<Transform> 
    - <<const>> slotPrefix : string = "slotAnim_"
    - sprites : Sprite[]
    - slotDFAM : SlotDataFromAPI_Manager
    + baseAsParentForRacks : GameObject
    + originPointToSpawn : Transform
    + scalePivotBase : GameObject
    + rotationPivotBase : GameObject
    - rawData : ArchitectureRawData
    - Start() : void
    - Awake() : void
    + SetObjectsFromRawData(data:ArchitectureRawData) : void
    - InstantiateOther(other:OtherDto, other_pos:Vector3, other_rot:Quaternion, parent:Transform) : GameObject
    - InstantiateRack(rackData:RackDto, rack_pos:Vector3, rack_rot:Quaternion, parent:Transform) : GameObject
    - InstantiateSlot(slot_data:RackSlotDto, parentTransform:Transform) : GameObject
    - AsignSlotData(slot:SlotDataAndControl, slot_data:RackSlotDto) : void
    - FillEmptySlotsOfRack(filledSlotsList:bool[], parentTransform:Transform, rack_model_data:RackModelData) : void
    + SetPickedRack(rackID:int) : void
    - InstantiateRack2(rackData:RackDto, rack_pos:Vector3, rack_rot:Quaternion, parent:Transform) : GameObject
    - InstantiateSlot2(slot_data:RackSlotDto, parentTransform:Transform) : GameObject
}
MonoBehaviour <|-- ArchitectureObjectsManager
@enduml
